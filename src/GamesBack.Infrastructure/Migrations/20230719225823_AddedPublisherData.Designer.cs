// <auto-generated />
using System;
using GamesBack.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GamesBack.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230719225823_AddedPublisherData")]
    partial class AddedPublisherData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GamesBack.Domain.GameAggregate.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid>("PublisherId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PublisherId");

                    b.ToTable("Games", (string)null);
                });

            modelBuilder.Entity("GamesBack.Domain.PublisherAggregate.Publisher", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Publishers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("10bdf658-4d44-4b08-9e9d-6e428c0d7599"),
                            Name = "Ubisoft"
                        });
                });

            modelBuilder.Entity("GamesBack.Domain.GameAggregate.Game", b =>
                {
                    b.HasOne("GamesBack.Domain.PublisherAggregate.Publisher", "Publisher")
                        .WithMany("Games")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("GamesBack.Domain.GameAggregate.Entities.Review", "Reviews", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uuid")
                                .HasColumnName("ReviewId");

                            b1.Property<Guid>("GameId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<byte>("Rating")
                                .HasColumnType("smallint");

                            b1.HasKey("Id", "GameId");

                            b1.HasIndex("GameId");

                            b1.ToTable("Reviews", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("GameId");
                        });

                    b.Navigation("Publisher");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("GamesBack.Domain.PublisherAggregate.Publisher", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
